#version 330

in vec2 pass_textureCoords;

out vec4 out_Colour;

uniform vec3 colour;
uniform sampler2D fontAtlas;

uniform float translucentFactor;
uniform int topPixel;
uniform int bottomPixel;

uniform float width;
uniform float edge;

uniform float borderWidth;
uniform float borderEdge;
uniform vec2 offset;
uniform vec3 outlineColour;

void main(void){

	if(gl_FragCoord.y > topPixel){
		discard;
	}
	if(gl_FragCoord.y < bottomPixel){
		discard;
	}

	float distance = 1.0 - texture(fontAtlas,pass_textureCoords).a;
	float alpha = 1.0 - smoothstep(width,width + edge, distance);
	
	float distance2 = 1.0 - texture(fontAtlas,pass_textureCoords + offset).a;
	float outlineAlpha = 1.0 - smoothstep(borderWidth,borderWidth + borderEdge, distance2);

	float overallAlpha = alpha + (1.0 - alpha) * outlineAlpha;
	vec3 overallColour = mix(outlineColour,colour, alpha/overallAlpha);
	
	out_Colour = vec4(overallColour,overallAlpha);
	out_Colour.a = out_Colour.a * translucentFactor;
}